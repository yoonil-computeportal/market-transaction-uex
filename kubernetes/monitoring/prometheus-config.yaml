# ==============================================================================
# Prometheus Configuration
# ==============================================================================
# Prometheus monitoring for the UEX Payment Processing System
#
# Install Prometheus using Helm:
#   helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
#   helm repo update
#   helm install prometheus prometheus-community/kube-prometheus-stack -n monitoring --create-namespace
#
# Access Prometheus:
#   kubectl port-forward -n monitoring svc/prometheus-kube-prometheus-prometheus 9090:9090
#   Open: http://localhost:9090
# ==============================================================================

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: uex-payments-dev
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'uex-payments-dev'
        environment: 'dev'

    # Alerting configuration
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    # Rule files
    rule_files:
      - /etc/prometheus/rules/*.yml

    # Scrape configurations
    scrape_configs:
      # Kubernetes API Server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes Nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      # Kubernetes Pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - uex-payments-dev
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      # UEX Backend
      - job_name: 'uex-backend'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - uex-payments-dev
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: uex-backend
          - source_labels: [__meta_kubernetes_pod_ip]
            action: replace
            target_label: __address__
            replacement: $1:3903
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: instance

      # Processing-Tier
      - job_name: 'processing-tier'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - uex-payments-dev
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: processing-tier
          - source_labels: [__meta_kubernetes_pod_ip]
            action: replace
            target_label: __address__
            replacement: $1:8900
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: instance

      # Management Backend
      - job_name: 'management-backend'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - uex-payments-dev
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: management-backend
          - source_labels: [__meta_kubernetes_pod_ip]
            action: replace
            target_label: __address__
            replacement: $1:9000
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: instance

      # PostgreSQL
      - job_name: 'postgres'
        static_configs:
          - targets: ['postgres-service:5432']
            labels:
              service: 'postgres'

      # Redis
      - job_name: 'redis'
        static_configs:
          - targets: ['redis-service:6379']
            labels:
              service: 'redis'

---
# Prometheus Alert Rules
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: uex-payments-dev
  labels:
    app: prometheus
data:
  alerts.yml: |
    groups:
      - name: uex-backend-alerts
        interval: 30s
        rules:
          # High CPU Usage
          - alert: HighCPUUsage
            expr: rate(container_cpu_usage_seconds_total{namespace="uex-payments-dev"}[5m]) > 0.8
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage on {{ $labels.pod }}"
              description: "CPU usage is above 80% for 5 minutes"

          # High Memory Usage
          - alert: HighMemoryUsage
            expr: container_memory_usage_bytes{namespace="uex-payments-dev"} / container_spec_memory_limit_bytes{namespace="uex-payments-dev"} > 0.9
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage on {{ $labels.pod }}"
              description: "Memory usage is above 90%"

          # Pod Restarts
          - alert: PodRestarting
            expr: rate(kube_pod_container_status_restarts_total{namespace="uex-payments-dev"}[15m]) > 0
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Pod {{ $labels.pod }} is restarting"
              description: "Pod has restarted {{ $value }} times in the last 15 minutes"

          # Pod Not Ready
          - alert: PodNotReady
            expr: kube_pod_status_phase{namespace="uex-payments-dev", phase!="Running"} == 1
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Pod {{ $labels.pod }} is not ready"
              description: "Pod has been in {{ $labels.phase }} phase for 5 minutes"

          # Service Down
          - alert: ServiceDown
            expr: up{namespace="uex-payments-dev"} == 0
            for: 2m
            labels:
              severity: critical
            annotations:
              summary: "Service {{ $labels.job }} is down"
              description: "Service has been down for 2 minutes"

          # Database Connection Issues
          - alert: DatabaseConnectionFailed
            expr: up{job="postgres"} == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "PostgreSQL is unreachable"
              description: "Cannot connect to PostgreSQL database"

          # Redis Connection Issues
          - alert: RedisConnectionFailed
            expr: up{job="redis"} == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Redis is unreachable"
              description: "Cannot connect to Redis"

          # High Request Error Rate
          - alert: HighErrorRate
            expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.05
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High error rate on {{ $labels.service }}"
              description: "Error rate is above 5%"

          # Slow Response Time
          - alert: SlowResponseTime
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Slow response time on {{ $labels.service }}"
              description: "95th percentile response time is above 2 seconds"

      - name: resource-alerts
        interval: 30s
        rules:
          # Disk Space Low
          - alert: DiskSpaceLow
            expr: (node_filesystem_avail_bytes / node_filesystem_size_bytes) < 0.1
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Low disk space on {{ $labels.instance }}"
              description: "Available disk space is below 10%"

          # Node Not Ready
          - alert: NodeNotReady
            expr: kube_node_status_condition{condition="Ready", status="true"} == 0
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Node {{ $labels.node }} is not ready"
              description: "Node has been not ready for 5 minutes"
